version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    container_name: ainewsroom-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ainewsroom
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 20

  redis:
    image: redis:7-alpine
    container_name: ainewsroom-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

# Placeholders for later app/ingest images
#  app:
#    build:
#      context: ../../
#      dockerfile: infra/docker/Dockerfile.web
#    depends_on:
#      postgres:
#        condition: service_healthy
#      redis:
#        condition: service_healthy
#    environment:
#      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/ainewsroom
#      REDIS_URL: redis://redis:6379
#
#  ingest:
#    build:
#      context: ../../
#      dockerfile: infra/docker/Dockerfile.ingest
#    depends_on:
#      postgres:
#        condition: service_healthy
#      redis:
#        condition: service_healthy
#    environment:
#      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/ainewsroom
#      REDIS_URL: redis://redis:6379

volumes:
  pgdata:

